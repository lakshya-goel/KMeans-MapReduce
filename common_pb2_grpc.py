# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2


class MapperStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunMap = channel.unary_unary(
                '/Mapper/RunMap',
                request_serializer=common__pb2.MasterMapperRequest.SerializeToString,
                response_deserializer=common__pb2.MasterMapperResponse.FromString,
                )
        self.GetData = channel.unary_unary(
                '/Mapper/GetData',
                request_serializer=common__pb2.ReducerMapperRequest.SerializeToString,
                response_deserializer=common__pb2.ReducerMapperResponse.FromString,
                )


class MapperServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapperServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunMap': grpc.unary_unary_rpc_method_handler(
                    servicer.RunMap,
                    request_deserializer=common__pb2.MasterMapperRequest.FromString,
                    response_serializer=common__pb2.MasterMapperResponse.SerializeToString,
            ),
            'GetData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetData,
                    request_deserializer=common__pb2.ReducerMapperRequest.FromString,
                    response_serializer=common__pb2.ReducerMapperResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Mapper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mapper(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Mapper/RunMap',
            common__pb2.MasterMapperRequest.SerializeToString,
            common__pb2.MasterMapperResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Mapper/GetData',
            common__pb2.ReducerMapperRequest.SerializeToString,
            common__pb2.ReducerMapperResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReducerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunReduce = channel.unary_unary(
                '/Reducer/RunReduce',
                request_serializer=common__pb2.MasterReducerRequest.SerializeToString,
                response_deserializer=common__pb2.MasterReducerResponse.FromString,
                )
        self.GetCentroids = channel.unary_unary(
                '/Reducer/GetCentroids',
                request_serializer=common__pb2.CentroidRequest.SerializeToString,
                response_deserializer=common__pb2.CentroidResponse.FromString,
                )


class ReducerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunReduce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCentroids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReducerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunReduce': grpc.unary_unary_rpc_method_handler(
                    servicer.RunReduce,
                    request_deserializer=common__pb2.MasterReducerRequest.FromString,
                    response_serializer=common__pb2.MasterReducerResponse.SerializeToString,
            ),
            'GetCentroids': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCentroids,
                    request_deserializer=common__pb2.CentroidRequest.FromString,
                    response_serializer=common__pb2.CentroidResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Reducer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reducer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunReduce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reducer/RunReduce',
            common__pb2.MasterReducerRequest.SerializeToString,
            common__pb2.MasterReducerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCentroids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reducer/GetCentroids',
            common__pb2.CentroidRequest.SerializeToString,
            common__pb2.CentroidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
